const express = require('express');
const passport = require('passport');
const { googleCallback, samlCallback, getSSOProviders } = require('./ssoController');

const router = express.Router();

// Get available SSO providers
router.get('/providers', getSSOProviders);

// Google OAuth routes
router.get('/google',
  passport.authenticate('google', {
    scope: ['profile', 'email']
  })
);

router.get('/google/callback',
  passport.authenticate('google', { session: false }),
  googleCallback
);

// SAML routes
router.get('/saml',
  passport.authenticate('saml', {
    additionalParams: {},
    failureRedirect: '/auth/error'
  })
);

router.post('/saml/callback',
  passport.authenticate('saml', { session: false }),
  samlCallback
);

// SAML metadata endpoint (for identity provider configuration)
router.get('/saml/metadata', (req, res) => {
  // This would typically be generated by your SAML library
  // For now, return a placeholder
  res.type('application/xml');
  res.send(`
    <EntityDescriptor xmlns="urn:oasis:names:tc:SAML:2.0:metadata" 
                     entityID="${process.env.SAML_ISSUER}">
      <SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
        <AssertionConsumerService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" 
                                 Location="${process.env.BASE_URL}/auth/saml/callback" 
                                 index="0"/>
      </SPSSODescriptor>
    </EntityDescriptor>
  `);
});

module.exports = router;
